module adder (A, B, CI, CO, S);
	input A,B,CI;
	output S,CO;

	assign CO = ( A & B ) |  ( C & ( A | B ) );
	assign S = (A^B)^C;
endmodule

module add9bits (A, B, out, clk, Reset, Overflow);
	input [8:0] A, B;
	input clk, Reset;
	output [9:0] out, Overflow;
	wire [9:0]C;

	assign out[9] = C[8];
	assign Overflow = C[7] ^ C[8];

	adder a1 (A[0],B[0],0,C[0],out[0]);
	adder a2 (A[1],B[1],C[0],C[1],out[1]);
	adder a3 (A[2],B[2],C[1],C[2],out[2]);
	adder a4 (A[3],B[3],C[2],C[3],out[3]);
	adder a5 (A[4],B[4],C[3],C[4],out[4]);
	adder a6 (A[5],B[5],C[4],C[5],out[5]);
	adder a7 (A[6],B[6],C[5],C[6],out[6]);
	adder a8 (A[7],B[7],C[6],C[7],out[7]);
	adder a9 (A[8],B[8],C[7],C[8],out[8]);

endmodule